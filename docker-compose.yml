services:
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - agentic_network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: agentic_trading
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agentic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 5s

  orchestrator:
    build:
      context: ./backend
      dockerfile: Dockerfile.orchestrator
    ports:
      - "8007:8007"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/agentic_trading
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - agentic_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - agentic_network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  agentic_network:
    driver: bridge
